[tool.poetry]
name = "caracara"
version = "0.1.1"
description = "The CrowdStrike Falcon Developer Toolkit"
authors = [ "CrowdStrike <falconpy@crowdstrike.com>" ]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.7"
py7zr = "^0.17.4"
pyppmd = "0.17.4"
crowdstrike-falconpy = "^1.0.10"

[tool.poetry.dev-dependencies]
bandit = "^1.7.3"
bullet = "^2.2.0"
coverage = "^6.3.2"
flake8 = "^^4.0.1"
pydocstyle = "^6.1.1"
pylint = "^2.12.2"
pytest = "^7.0.1"
PyYAML = "^6.0"
toml = "^0.10.2"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.pylint.messages_control]
max-line-length = 100
disable = [
    # Disable duplicate-code as our policies modules will have lots of overlap, by design.
    # It is not really practical to try to appease this rule when creating an SDK wrapper.
    "duplicate-code",

    # Disable pointless-string-statement as per this GitHub thread / GVR's Tweet
    # https://github.com/PyCQA/pylint/issues/2864#issuecomment-642398573
    "pointless-string-statement",

    # Disable too-many-instance-attributes as we have some classes that are build
    # based on data returned by Falcon. It would be silly for us to refactor classes
    # representing these constructs just to pass this pylint rule. 
    "too-many-instance-attributes",
    # Disable pylint rule R0201 as we have functions that are decorated with decorators
    # that expect a self parameter. In these cases, the functions cannot be decorated
    # with @staticmethod.
    "R0201",
]
